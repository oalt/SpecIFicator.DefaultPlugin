@using SpecIFicator.DefaultPlugin.ViewModelExtensions;
@using Microsoft.AspNetCore.Components.Forms;
@using SpecIFicator.DefaultPlugin.BlazorComponents.TestExecution;
@using SpecIFicator.DefaultPlugin.ViewModels;

@if (DataContext.SelectedResource.ResourceClassID == "RC-TestStep")
{
    <h1>
        @(
            ((NodeViewModel)DataContext.SelectedNode.Parent).Level
            )
        <ResourceIcon Icon="@DataContext.SelectedNode.TestCaseIcon()" />
        @DataContext.SelectedNode.TestCaseTitle()
    </h1>

    <h2>
        @DataContext.SelectedNode.Level
        <ResourceIcon Icon="@DataContext.SelectedNode.ReferencedResource.Icon" />
        @DataContext.SelectedResource.Title
    </h2>
    <br />
    <button type="button" @onclick="OnBackButtonClick" class="btn btn-primary"><i class="bi bi-caret-left"></i>@L["Button.Back"]</button>
    <button type="button" @onclick="OnNextButtonClick" class="btn btn-primary"><i class="bi bi-caret-right"></i>@L["Button.Next"]</button>
    <button type="button" @onclick="OnSaveButtonClick" class="btn btn-success"><i class="bi bi-save"></i>@L["Button.Save"]</button>
    <br />
    <br />
    <EditForm Model="@DataContext">

        <h3><label class="verdict">@L["Label.Verdict"]</label></h3>

        <InputRadioGroup Name="VerdictRadioGroup" @bind-Value="@DataContext.Verdict">

            @foreach (KeyValuePair<string, string> keyValuePair in DataContext.VerdictValues)
            {
                <InputRadio Value="@keyValuePair.Key"
                    Name="VerdictRadioGroup" />
                <label for="None" class="form-label">@keyValuePair.Value </label>
              
            }
        </InputRadioGroup><br />
    </EditForm>
    <br />
    <h3><label>@L["Label.ReasonMessage"]</label></h3>
    <textarea class="text" @bind="DataContext.ReasonMessage"></textarea>
    <br />
    <br />
    <h3><lable class="Description">@L["Label.Description"]</lable></h3>
    <p>
        @(
            (MarkupString)DataContext.SelectedResource.Description
            )
    </p>
    <br />

    <h3><lable class="TestData">@L["Label.TestData"]</lable></h3>
    <p>
        @(
            (MarkupString)DataContext.SelectedResource.TestData()
            )
    </p>
    <br />
    <br />
    <h3><lable class="Result">@L["Label.ExpectedResult"]</lable></h3>
    <p>
        @(
            (MarkupString)DataContext.SelectedResource.ExpectedResult()
            )
    </p>
    <br />

}
else if (DataContext.SelectedResource.ResourceClassID == "RC-TestCase")
{
    <h1>
        @DataContext.SelectedNode.Level
        <ResourceIcon Icon="@DataContext.SelectedNode.TestCaseIcon()" />
        @DataContext.SelectedNode.TestCaseTitle()
    </h1>
    <br />
    <br />

    <button type="button" @onclick="OnBackButtonClick" class="btn btn-primary"><i class="bi bi-caret-left"></i>@L["Button.Back"]</button>
    <button type="button" @onclick="OnNextButtonClick" class="btn btn-primary"><i class="bi bi-caret-right"></i>@L["Button.Next"]</button>

    <br />
    <br />
    <strong>

        <h3><lable class="Description">@L["Label.Description"]</lable></h3>

        <p>
            @(
                (MarkupString)DataContext.SelectedResource.Description
                )
        </p>
    </strong>
    <br />
    <h3><label>@L["Label.TestResult"]</label></h3>
}

else if (DataContext.SelectedResource.ResourceClassID == "RC-TestSuite")
{
    <h1>
        @DataContext.SelectedNode.Level
        <ResourceIcon Icon="@DataContext.SelectedNode.ReferencedResource.Icon" />
        @DataContext.SelectedNode.Title
    </h1>
    <br />
    <br />

    <button type="button" @onclick="OnNextButtonClick" class="btn btn-primary"><i class="bi bi-caret-right"></i>@L["Button.Next"]</button>

    <br />
    <br />
    <h3><lable class="Description">@L["Label.Description"]</lable></h3>

    @(
            (MarkupString)DataContext.SelectedResource.GetDescription()
         )
    
<br />
<br />
<div>
    <h3>
            <label class="verdict">@L["Label.Verdict"]</label>

        <TestVerdictIcon DataContext="DataContext.SelectedResource"></TestVerdictIcon>
    </h3>
</div>
    <br />
    <br />

    <div>
        <h3><label>@L["Label.TestObject"]</label></h3>
        @(
            (MarkupString)DataContext.TestObject
            )
    </div>
}
