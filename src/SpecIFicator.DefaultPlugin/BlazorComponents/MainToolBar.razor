@using MDD4All.UI.BlazorComponents.Ribbon
@using MDD4All.UI.BlazorComponents.Tooltip
@using MDD4All.UI.BlazorComponents.Dialog
<div class="toolbarPanel">
    <RibbonCategory>
        <RibbonPanel PanelTitle="@L["Label.NewResource"]">
            <div class="toolStackPanel">

                <ResourceClassSelector @bind-SelectedResourceClassKey="@DataContext.SelectedResourceClassKey"
                                       CssStyles="form-select form-select-sm"></ResourceClassSelector>

                <div class="p-1">
                    <Tooltip Text="@L["Tooltip.NewChildResource"]">
                        <button type="button"
                                class="btn btn-outline-primary"
                                @onclick="() => OnNewChildResourceClicked()">
                            <i class="bi bi-box-arrow-down-right"></i>
                        </button>
                    </Tooltip>
                    <Tooltip Text="@L["Tooltip.NewResourceBelow"]">
                        <button type="button"
                                class="btn btn-outline-info"
                                @onclick="() => OnNewResourceBelowClicked()">
                            <i class="bi bi-box-arrow-down"></i>
                        </button>
                    </Tooltip>
                    <Tooltip Text="@L["Tooltip.NewResourceAbove"]">
                        <button type="button"
                                class="btn btn-outline-secondary"
                                @onclick="() => OnNewResourceAboveClicked()">
                            <i class="bi bi-box-arrow-up"></i>
                        </button>
                    </Tooltip>
                </div>
            </div>
        </RibbonPanel>
        <RibbonPanel PanelTitle="@L["Label.EditResource"]">
            <div class="toolStackPanel">
                <div>
                    <button type="button"
                            class="btn btn-outline-primary  btn-lg"
                            @onclick="() => OnEditResourceClicked()">
                        <i class="bi bi-pencil-square"></i>
                    </button>
                </div>
            </div>

        </RibbonPanel>
        <RibbonPanel PanelTitle="@L["Label.DeleteResource"]">
            <div class="toolStackPanel">
                <div>
                    <button type="button"
                            class="btn btn-outline-danger  btn-lg"
                            @onclick="() => OnDeleteResourceClicked()">
                        <i class="bi bi-trash"></i>
                    </button>
                </div>
            </div>

        </RibbonPanel>
        <RibbonPanel PanelTitle="@L["Label.AddStatement"]">
            <div class="toolStackPanel">
                <div>
                    <button type="button"
                            class="btn btn-outline-dark  btn-lg"
                            @onclick="() => OnAddStatementClicked()">
                        <i class="bi bi-heart-arrow"></i>
                    </button>
                </div>
            </div>

        </RibbonPanel>
        <RibbonPanel PanelTitle="@L["Label.MultilanguageSupport"]">
            <div class="toolStackPanel">
                <div>
                    <MultilanguageSelector DataContext="@DataContext" />
                </div>
                <div class="form-switch">
                    <input class="form-check-input" type="checkbox" id="flexSwitchCheckDefault" @bind="@DataContext.IsMultilanguageEnabled">
                    <span>@L["Label.EnableMultilanguage"]</span>
                </div>
            </div>

        </RibbonPanel>
        <RibbonPanel PanelTitle="@L["Label.Comments"]">
            <div class="toolStackPanel">
                <div>
                    <button type="button"
                            class="btn btn-outline-info  btn-lg"
                            @onclick="() => OnNewCommentClicked()">
                        <i class="bi bi-chat-left-text"></i>
                    </button>
                </div>
            </div>

        </RibbonPanel>
    </RibbonCategory>
</div>
@if (DataContext.EditorActive)
{
    <ModalDialog Title="@L[DataContext.EditDialogTitleKey]"
             DialogType="ModalDialog.ModalDialogType.OkCancel"
             OnClose="@OnEditDialogClose">
        <ResourcePanel ResourceViewModel="@DataContext.ResourceUnderEdit"
                       IsMultilinguismEnabled="@DataContext.IsMultilanguageEnabled"
                       PrimaryLanguage="@DataContext.PrimaryLanguage"
                       SecondaryLanguage="@DataContext.SecondaryLanguage" />
    </ModalDialog>
}
@if (DataContext.ShowDeleteConfirm)
{
    <ModalDialog Title="@L["Title.DeleteResource"]"
             DialogType="ModalDialog.ModalDialogType.DeleteCancel"
             OnClose="@OnDeleteDialogClose">
        <div>@L["Text.DeleteResource"]</div>
    </ModalDialog>
}
@if(DataContext.ShowAddStatementDialog)
{
    <ModalDialog Title="@L["Title.AddStatement"]"
                 DialogType="ModalDialog.ModalDialogType.OkCancel"
                 OnClose="@OnAddStatementDialogClose"
                 CanConfirm="DataContext.CreateStatementViewModel.CanConfirmEditOperation">
             <StatementCreator DataContext="@DataContext.CreateStatementViewModel"/>
    </ModalDialog>
}
@if(DataContext.ShowComments)
{
    string dialogTitle = L["Label.Comments"];
    ResourceViewModel resourceViewModel = ((NodeViewModel)DataContext.SelectedNode).ReferencedResource;
    dialogTitle += " - [" + resourceViewModel.Type + "] " + resourceViewModel.Title;
   
    <ModalDialog Title="@dialogTitle"
                 DialogType="ModalDialog.ModalDialogType.Ok"
                 OnClose="@OnCommentDialogClose">
        <CommentPanel HierarchyViewModel="DataContext" />
    </ModalDialog>
}
